<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.project.dao.BoardDao">

    <insert id="insertNotice">
    insert 
    	into goodsopen(cateType, openTitle,openDate,openProduct,productInfo,enterInfo,priceInfo,noticeInfo,openImage)
    	values (#{notice.cateType},#{notice.openTitle},#{notice.openDate},
    			#{notice.openProduct},#{notice.productInfo},#{notice.enterInfo},#{notice.priceInfo},#{notice.noticeInfo},#{notice.openImage});
   </insert>
   
    <select id="selectNoticeList" resultType="kr.green.project.vo.NoticeVo">
 	
	 	select * from goodsopen
	 		where ( openTitle like concat('%',#{cri.search},'%')
				or openDate like  concat('%',#{cri.search},'%')
                or openProduct like  concat('%',#{cri.search},'%')
                or productInfo like  concat('%',#{cri.search},'%')
                or enterInfo like  concat('%',#{cri.search},'%')
                or noticeInfo like  concat('%',#{cri.search},'%')
                )
		  	order by boOpenNum desc 
  	  limit #{cri.pageStart},#{cri.perPageNum}
  </select>
  
  
    <select id="selectNoticeByNum" resultType="kr.green.project.vo.NoticeVo">
 	
	SELECT * FROM ticket.goodsopen
  	  where 
  	  	boOpenNum = #{num};
  </select>
  
    <update id="updateNotice">
  	update goodsopen
  		set 
  			cateType = #{notice.cateType},
  			openTitle = #{notice.openTitle},
  			openDate = #{notice.openDate},
  			openProduct = #{notice.openProduct},
  			productInfo = #{notice.productInfo},
  			priceInfo = #{notice.priceInfo},
  			enterInfo = #{notice.enterInfo},
  			noticeInfo = #{notice.noticeInfo},
  			openImage = #{notice.openImage},
  			openViews = #{notice.openViews}
  		where
  			boOpenNum = #{notice.boOpenNum}
 </update>
 
 <select id ="selectTotalCount" resultType="int">
 		select count(*) from goodsopen
		where ( openTitle like concat('%',#{cri.search},'%')
				or openDate like  concat('%',#{cri.search},'%')
                or openProduct like  concat('%',#{cri.search},'%')
                or productInfo like  concat('%',#{cri.search},'%')
                or enterInfo like  concat('%',#{cri.search},'%')
                or noticeInfo like  concat('%',#{cri.search},'%')
                );
 
 </select>
 
 
   <insert id="insertQnA">
    insert 
    	into ticket.qna(boardTitle,boardWriter,boardContent,boardPw,usePw)
    	values (#{qna.boardTitle},#{qna.boardWriter},#{qna.boardContent},#{qna.boardPw},#{qna.usePw});
   </insert>
   
 <select id = "selectQnA" resultType="kr.green.project.vo.QnAVo">
 	SELECT * FROM ticket.qna order by boardNum desc;
 </select>
 
  <select id = "selectHelpByNum" resultType="kr.green.project.vo.QnAVo">
 	SELECT * FROM ticket.qna
 		where 
 			boardNum = #{num};
 </select>
 
    <update id="updateQnA">
  	update ticket.qna
  		set 
  			views = #{qna.views}
  		where
  			boardNum = #{qna.boardNum}
 </update>
 
   <select id = "selectCommentList" resultType="kr.green.project.vo.CommentVo">
 select * from ticket.comment
	where boNum = #{num} and isDel = 'N' 
    order by groupNum ASC , comment.order ASC;
 </select>
 
 
 <insert id="insertCommentFromQnA2" useGeneratedKeys="true" keyProperty="comment.indexComments" parameterType="kr.green.project.vo.CommentVo"> 
 
     insert 
    	into ticket.comment(boNum,mentWriter,comment,classComment,comment.order)
    	values (#{comment.boNum},#{comment.mentWriter},#{comment.comment},#{comment.classComment},#{comment.order});
            
   </insert>
   
      <update id="updateGroupNum">
  	update ticket.comment
  		set 
  			groupNum = #{indexComments}
  		where
  			indexComments = #{indexComments};
 </update>
 
 <select id = "selectCountOrderByGroupNum" resultType="int">
 select count(comment.order) from ticket.comment
	where 
		groupNum = #{groupNum};
 </select>

 <insert id="insertReCommentFromQnA">
  insert 
    	into ticket.comment(boNum,mentWriter,comment,classComment,comment.order,groupNum)
    	values (#{comment.boNum},#{comment.mentWriter},#{comment.comment},#{comment.classComment},#{comment.order},#{comment.groupNum});
 
 </insert>
 
 <select id ="selectcommentByindex" resultType="kr.green.project.vo.CommentVo">
 SELECT * FROM ticket.comment
	where indexComments = #{indexComment};
	</select>
  
  </mapper>
 